apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'cloudfoundry'

def javaVersion = JavaVersion.VERSION_1_7;
sourceCompatibility = javaVersion;
targetCompatibility = javaVersion; 
//sourceCompatibility = 1.7
//targetCompatibility = 1.7
group = 'com.example.liberty.swagger2'
archivesBaseName = 'liberty-swagger2'
version = '0.0.1'
description = 'Demonstrate using Swagger2 with WebSphere Liberty'

//http://stackoverflow.com/questions/18738888/how-to-use-provided-scope-for-jar-file-in-gradle-build
configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

jar {
    manifest {
        attributes 'Implementation-Title': archivesBaseName, 'Implementation-Version': version
    }
}


buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.1.1'
    }
}
repositories {
    mavenCentral()
}


eclipse {
    project {
        //if you don't like the name Gradle has chosen
        name = 'liberty-swagger2'
    }
	wtp {
	    facet {
	        facets = facets
	
	        facet name: 'jst.web', version: '3.0'
	        facet name: 'jst.java', version: '1.7'
	    }
	    //https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent.html
	    component {
			contextPath = '/'
		}
	}
}



dependencies {
	compile 'org.slf4j:slf4j-jdk14:1.7.7'

	//IBM WebSphere	with Wink
	//compile 'org.apache.wink:wink-common:1.4'
	//compile 'org.apache.wink:wink-server:1.4'
	//compile 'javax:javaee-web-api:6.0'
	
	//Jersey 1
    //compile 'com.sun.jersey:jersey-server:1.8'
    
    //Swagger for Jersey 1
    //https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-1.X-Project-Setup-1.5
	//compile 'com.wordnik:swagger-jersey2-jaxrs:1.5.2-M2'
	
	//Jersey 2
	//for servlet 3.0
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.17'
	//for servlet 2.x
	//compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.17'
 
    //Swagger for Jersey 2
    //https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup
    //compile 'com.wordnik:swagger-jersey2-jaxrs_2.10:1.3.12'
 	//compile 'com.wordnik:swagger-jaxrs_2.10:1.3.12'
    
    //https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5
    compile 'io.swagger:swagger-jersey2-jaxrs:1.5.0'
    
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1',
                'javax.servlet.jsp:jsp-api:2.2'
    
    //compile 'javax.servlet:javax.servlet-api:3.0.1'
    //compile 'javax.servlet.jsp:jsp-api:2.2'
    //compile group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.2'
    //compile group: 'javax.servlet', name: 'servlet-api', version:'2.5'
    
    compile 'javax.servlet:jstl:1.2'
    //compile 'javax.servlet:jstl-api:1.2'
    //compile 'javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1'
    
    //compile group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.1'
    //provided group: 'javax.servlet', name: 'servlet-api', version:'2.5'
    //provided group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.1'
    //compile group:'javax.servlet.jsp.jstl', name:'javax.servlet.jsp.jstl-api', version:'1.2.1'
    //compile 'javax.servlet.jsp.jstl', version:'1.2'
	//compile 'javax.servlet.jsp.jstl:jstl:1.2'

    compile 'org.apache.httpcomponents:fluent-hc:4.3.4'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version:'4.3.4'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.3.4'
    
    testCompile group: 'org.mockito', name: 'mockito-core', version:'1.10.19'
    testCompile group: 'junit', name: 'junit-dep', version:'4.11'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

war {
    //version = ""	// remove the version from the .war file name
    //from 'WebContent'
    //from 'src/main/webapp' 
    webInf{
        from('src/main/java') {
            include '**/*.txt'
            into('classes/')
        }
    }
    
}

cfPush.dependsOn(war)

// Plugin config: https://github.com/cloudfoundry/cf-java-client/tree/master/cloudfoundry-gradle-plugin
// uses ~/.gradle/gradle.properties
// cfUsername='user@example.com'
// cfPassword='s3cr3t'

def userName = System.properties['user.name']
def serviceName = "${userName}-liberty-swagger2"

// gradle cfPush -Ptomcat
if (project.hasProperty('tomcat')) {
    cloudfoundry {
       buildpack = "https://github.com/cloudfoundry/java-buildpack.git"
       application = "${serviceName}-tomcat"
    }
} else {
    cloudfoundry {
       application = "${serviceName}"
    }
}

cloudfoundry {
    target = 'https://api.ng.bluemix.net'
    file = file("${war.archivePath}")
    //uri = "${serviceName}.mybluemix.net"
    env = [
        "JBP_CONFIG_LIBERTY": "app_archive: {features: [servlet-3.1, jsp-2.2, websocket-1.1]}",
        "key": "value"
    ]
}
